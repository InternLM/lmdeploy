name: unit-test

on:
  pull_request:
    paths:
      - ".github/workflows/unit-test.yml"
      - "cmake/**"
      - "src/**"
      - "tests/**"
      - "3rdparty/**"
      - "lmdeploy/**"
      - "requirements/**"
      - "requirements_cuda.txt"
      - "CMakeLists.txt"
      - "setup.py"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/unit-test.yml"
      - "cmake/**"
      - "src/**"
      - "tests/**"
      - "3rdparty/**"
      - "lmdeploy/**"
      - "requirements/**"
      - "requirements_cuda.txt"
      - "CMakeLists.txt"
      - "setup.py"
    tags:
      - "v*.*.*"

jobs:
  unit_test:
    runs-on: [self-hosted, linux-a100-s2]
    timeout-minutes: 4320 # 72hours
    container:
      image: nvidia/cuda:11.8.0-devel-ubuntu22.04
      options: "--gpus=all --ipc=host --user root -e PIP_CACHE_DIR=/root/.cache/pip -e CUDA_VISIBLE_DEVICES=2,3 --pull never"
      volumes:
        - /nvme/share_data/github-actions/pip-cache:/root/.cache/pip
        - /nvme/share_data/github-actions/hf_home:/root/.cache/huggingface
        - /nvme/share_data/github-actions/packages:/root/packages
        - /usr/share/zoneinfo/Asia/Shanghai:/etc/localtime:ro
    steps:
      - name: Setup systems
        run: |
          apt-get update -y && apt-get install -y software-properties-common wget git curl &&\
          add-apt-repository ppa:deadsnakes/ppa -y && apt-get update -y && apt-get install -y --no-install-recommends \
          ninja-build rapidjson-dev libgoogle-glog-dev gdb python3.10 python3.10-dev python3.10-venv \
          && apt-get clean -y && rm -rf /var/lib/apt/lists/* && cd /opt && python3 -m venv py3
          echo "PATH=/opt/py3/bin:$PATH" >> "$GITHUB_ENV"
      - name: Clone repository
        uses: actions/checkout@v2
      - name: Install pytorch
        run: |
          python3 -V
          python3 -m pip cache dir
          python3 -m pip install torch==2.4.0 torchvision==0.19.0 --index-url https://download.pytorch.org/whl/cu118
      - name: Install lmdeploy
        run: |
          python3 -m pip install pynvml packaging protobuf transformers_stream_generator matplotlib
          # manually install flash attn
          python3 -m pip install /root/packages/cu118/flash_attn-*.whl
          python3 -m pip install -r requirements_cuda.txt -r requirements/test.txt
          python3 -m pip install -e .
      - name: Check env
        run: |
          python3 -m pip list
          lmdeploy check_env
      - name: Test lmdeploy csrc
        run: |
          #./build/bin/build/bin/unittest
          echo "TODO"
      - name: Test lmdeploy python UT
        run: |
          coverage run --branch --source lmdeploy -m pytest -rsE tests
          coverage xml
          coverage report -m
      - name: Clear workfile
        if: always()
        run: |
          export workdir=$(pwd)
          cd ..
          rm -rf $workdir
          mkdir $workdir
          chmod -R 777 $workdir
